// Package admin provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package admin

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
	BearerAuthScopes = "BearerAuth.Scopes"
)

// ApiKey defines model for ApiKey.
type ApiKey struct {

	// The Key will be shown only on create. On subsequemt GET calls, only the masked APIKeys will be returned
	ApiKey     string `json:"apiKey"`
	Identifier string `json:"identifier"`

	// The hashed API key
	Key  *string `json:"key,omitempty"`
	Name string  `json:"name"`
	Type string  `json:"type"`
}

// ApiKeys defines model for ApiKeys.
type ApiKeys struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	ApiKeys *[]ApiKey `json:"apiKeys,omitempty"`
}

// AuditTrail defines model for AuditTrail.
type AuditTrail struct {
	Action           string                   `json:"action"`
	Actor            string                   `json:"actor"`
	Comment          string                   `json:"comment"`
	Enviroment       *string                  `json:"enviroment,omitempty"`
	ExecutedOn       int                      `json:"executedOn"`
	InstructionSet   []map[string]interface{} `json:"instructionSet"`
	ObjectAfter      string                   `json:"objectAfter"`
	ObjectBefore     string                   `json:"objectBefore"`
	ObjectIdentifier string                   `json:"objectIdentifier"`
	ObjectType       string                   `json:"objectType"`
	Project          string                   `json:"project"`
	Status           string                   `json:"status"`
}

// AuditTrails defines model for AuditTrails.
type AuditTrails struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	AuditTrails *[]AuditTrail `json:"auditTrails,omitempty"`
}

// Clause defines model for Clause.
type Clause struct {
	Attribute string   `json:"attribute"`
	Id        string   `json:"id"`
	Negate    bool     `json:"negate"`
	Op        string   `json:"op"`
	Values    []string `json:"values"`
}

// Distribution defines model for Distribution.
type Distribution struct {
	BucketBy   string              `json:"bucketBy"`
	Variations []WeightedVariation `json:"variations"`
}

// Environment defines model for Environment.
type Environment struct {
	ApiKeys     ApiKeys `json:"apiKeys"`
	Description *string `json:"description,omitempty"`
	Id          *string `json:"id,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Project     string  `json:"project"`
	Tags        *[]Tag  `json:"tags,omitempty"`
}

// Environments defines model for Environments.
type Environments struct {
	Environments *[]Environment `json:"environments,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// Feature defines model for Feature.
type Feature struct {
	Archived            bool    `json:"archived"`
	CreatedAt           int64   `json:"createdAt"`
	DefaultOffVariation string  `json:"defaultOffVariation"`
	DefaultOnVariation  string  `json:"defaultOnVariation"`
	Description         *string `json:"description,omitempty"`
	EnvProperties       *struct {
		DefaultServe Serve           `json:"defaultServe"`
		Environment  string          `json:"environment"`
		ModifiedAt   int64           `json:"modifiedAt"`
		OffVariation string          `json:"offVariation"`
		Rules        *[]ServingRule  `json:"rules,omitempty"`
		State        FeatureState    `json:"state"`
		VariationMap *[]VariationMap `json:"variationMap,omitempty"`
		Version      *int64          `json:"version,omitempty"`
	} `json:"envProperties,omitempty"`
	Evaluation           *string         `json:"evaluation,omitempty"`
	EvaluationIdentifier *string         `json:"evaluationIdentifier,omitempty"`
	Identifier           string          `json:"identifier"`
	Kind                 string          `json:"kind"`
	ModifiedAt           int64           `json:"modifiedAt"`
	Name                 string          `json:"name"`
	Owner                *[]string       `json:"owner,omitempty"`
	Permanent            bool            `json:"permanent"`
	Prerequisites        *[]Prerequisite `json:"prerequisites,omitempty"`
	Project              string          `json:"project"`
	Results              *[]Results      `json:"results,omitempty"`
	Status               *FeatureStatus  `json:"status,omitempty"`
	Tags                 *[]Tag          `json:"tags,omitempty"`
	Variations           []Variation     `json:"variations"`
}

// FeatureEvaluation defines model for FeatureEvaluation.
type FeatureEvaluation struct {
	Count               *int    `json:"count,omitempty"`
	Date                *int    `json:"date,omitempty"`
	VariationIdentifier *string `json:"variationIdentifier,omitempty"`
	VariationName       *string `json:"variationName,omitempty"`
}

// FeatureEvaluations defines model for FeatureEvaluations.
type FeatureEvaluations struct {
	Evaluations *[]FeatureEvaluation `json:"evaluations,omitempty"`
}

// Feature flags yaml for a project
type FeatureFlagsYaml struct {
	Yaml string `json:"yaml"`
}

// FeatureMetric defines model for FeatureMetric.
type FeatureMetric struct {
	Identifier *string        `json:"identifier,omitempty"`
	Name       *string        `json:"name,omitempty"`
	Results    *[]Results     `json:"results,omitempty"`
	Status     *FeatureStatus `json:"status,omitempty"`
}

// FeatureMetrics defines model for FeatureMetrics.
type FeatureMetrics struct {
	Metrics *[]FeatureMetric `json:"metrics,omitempty"`
}

// FeatureState defines model for FeatureState.
type FeatureState string

// List of FeatureState
const (
	FeatureState_off FeatureState = "off"
	FeatureState_on  FeatureState = "on"
)

// FeatureStatus defines model for FeatureStatus.
type FeatureStatus struct {
	LastAccess int    `json:"lastAccess"`
	Status     string `json:"status"`
}

// Features defines model for Features.
type Features struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Features *[]Feature `json:"features,omitempty"`
}

// FlagBasicInfo defines model for FlagBasicInfo.
type FlagBasicInfo struct {
	Identifier string `json:"identifier"`
	Name       string `json:"name"`
}

// FlagBasicInfos defines model for FlagBasicInfos.
type FlagBasicInfos struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	FeatureFlags *[]FlagBasicInfo `json:"featureFlags,omitempty"`
}

// GitDetails defines model for GitDetails.
type GitDetails struct {
	CommitMsg string `json:"commitMsg"`
}

// GitRepo defines model for GitRepo.
type GitRepo struct {
	AutoCommit     *bool  `json:"autoCommit,omitempty"`
	Branch         string `json:"branch"`
	Enabled        *bool  `json:"enabled,omitempty"`
	FilePath       string `json:"filePath"`
	LastSync       *int64 `json:"lastSync,omitempty"`
	ObjectId       string `json:"objectId"`
	RepoIdentifier string `json:"repoIdentifier"`
	RootFolder     string `json:"rootFolder"`
}

// GitRepoResp defines model for GitRepoResp.
type GitRepoResp struct {
	RepoDetails *GitRepo `json:"repoDetails,omitempty"`
	RepoSet     bool     `json:"repoSet"`
}

// GitSyncPatchOperation defines model for GitSyncPatchOperation.
type GitSyncPatchOperation struct {
	Comment *string `json:"comment,omitempty"`

	// Time of execution in unix epoch milliseconds when the scheduled changes will be applied
	ExecutionTime *int             `json:"executionTime,omitempty"`
	GitDetails    *GitDetails      `json:"gitDetails,omitempty"`
	Instructions  PatchInstruction `json:"instructions"`
}

// A pair of object id and object body
type ObjectSnapshot struct {
	Id    string                  `json:"id"`
	Value *map[string]interface{} `json:"value,omitempty"`
}

// ObjectSnapshots defines model for ObjectSnapshots.
type ObjectSnapshots struct {
	Objectsnapshots *[]ObjectSnapshot `json:"objectsnapshots,omitempty"`
}

// Pagination defines model for Pagination.
type Pagination struct {
	ItemCount int  `json:"itemCount"`
	PageCount int  `json:"pageCount"`
	PageIndex int  `json:"pageIndex"`
	PageSize  int  `json:"pageSize"`
	Version   *int `json:"version,omitempty"`
}

// PatchInstruction defines model for PatchInstruction.
type PatchInstruction []struct {

	// The name of the modification you would like to perform on a resource.
	Kind       string                 `json:"kind"`
	Parameters map[string]interface{} `json:"parameters"`
}

// PatchOperation defines model for PatchOperation.
type PatchOperation struct {
	Comment *string `json:"comment,omitempty"`

	// Time of execution in unix epoch milliseconds when the scheduled changes will be applied
	ExecutionTime *int             `json:"executionTime,omitempty"`
	Instructions  PatchInstruction `json:"instructions"`
}

// Prerequisite defines model for Prerequisite.
type Prerequisite struct {
	Feature    string   `json:"feature"`
	Variations []string `json:"variations"`
}

// Project defines model for Project.
type Project struct {
	Description *string `json:"description,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Tags        *[]Tag  `json:"tags,omitempty"`
}

// Projects defines model for Projects.
type Projects struct {
	ItemCount *int       `json:"itemCount,omitempty"`
	PageCount *int       `json:"pageCount,omitempty"`
	PageIndex *int       `json:"pageIndex,omitempty"`
	PageSize  *int       `json:"pageSize,omitempty"`
	Projects  *[]Project `json:"projects,omitempty"`
}

// Results defines model for Results.
type Results struct {
	Count               int    `json:"count"`
	VariationIdentifier string `json:"variationIdentifier"`
	VariationName       string `json:"variationName"`
}

// Segment defines model for Segment.
type Segment struct {
	CreatedAt   *int64    `json:"createdAt,omitempty"`
	Environment *string   `json:"environment,omitempty"`
	Excluded    *[]Target `json:"excluded,omitempty"`

	// Unique identifier for the segment.
	Identifier string    `json:"identifier"`
	Included   *[]Target `json:"included,omitempty"`
	ModifiedAt *int64    `json:"modifiedAt,omitempty"`

	// Name of the segment.
	Name string `json:"name"`

	// An array of rules that can cause a user to be included in this segment.
	Rules   *[]Clause `json:"rules,omitempty"`
	Tags    *[]Tag    `json:"tags,omitempty"`
	Version *int64    `json:"version,omitempty"`
}

// SegmentFlag defines model for SegmentFlag.
type SegmentFlag struct {
	Description *string `json:"description,omitempty"`
	Environment string  `json:"environment"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Project     string  `json:"project"`
	Type        string  `json:"type"`
	Variation   string  `json:"variation"`
}

// Segments defines model for Segments.
type Segments struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Segments *[]Segment `json:"segments,omitempty"`
}

// Serve defines model for Serve.
type Serve struct {
	Distribution *Distribution `json:"distribution,omitempty"`
	Variation    *string       `json:"variation,omitempty"`
}

// ServingRule defines model for ServingRule.
type ServingRule struct {
	Clauses  []Clause `json:"clauses"`
	Priority int      `json:"priority"`
	RuleId   string   `json:"ruleId"`
	Serve    Serve    `json:"serve"`
}

// Status defines model for Status.
type Status string

// List of Status
const (
	Status_ERROR   Status = "ERROR"
	Status_FAILURE Status = "FAILURE"
	Status_SUCCESS Status = "SUCCESS"
)

// A name and value pair.
type Tag struct {
	Name  string  `json:"name"`
	Value *string `json:"value,omitempty"`
}

// Target defines model for Target.
type Target struct {
	Account     string                  `json:"account"`
	Anonymous   *bool                   `json:"anonymous,omitempty"`
	Attributes  *map[string]interface{} `json:"attributes,omitempty"`
	CreatedAt   *int64                  `json:"createdAt,omitempty"`
	Environment string                  `json:"environment"`
	Identifier  string                  `json:"identifier"`
	Name        string                  `json:"name"`
	Org         string                  `json:"org"`
	Project     string                  `json:"project"`
	Segments    *[]Segment              `json:"segments,omitempty"`
}

// TargetAndSegment defines model for TargetAndSegment.
type TargetAndSegment struct {
	Identifier *string `json:"identifier,omitempty"`
	Name       *string `json:"name,omitempty"`
	Type       string  `json:"type"`
}

// TargetDetail defines model for TargetDetail.
type TargetDetail struct {
	ExcludedSegments *[]TargetDetailSegment `json:"excludedSegments,omitempty"`
	Identifier       *string                `json:"identifier,omitempty"`
	IncludedSegments *[]TargetDetailSegment `json:"includedSegments,omitempty"`
	RuleSegments     *[]TargetDetailSegment `json:"ruleSegments,omitempty"`
}

// TargetDetailSegment defines model for TargetDetailSegment.
type TargetDetailSegment struct {
	Identifier *string `json:"identifier,omitempty"`
	Name       *string `json:"name,omitempty"`
}

// TargetMap defines model for TargetMap.
type TargetMap struct {
	Identifier *string `json:"identifier,omitempty"`
	Name       string  `json:"name"`
}

// Targets defines model for Targets.
type Targets struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Targets *[]Target `json:"targets,omitempty"`
}

// TargetsAndSegments defines model for TargetsAndSegments.
type TargetsAndSegments struct {
	// Embedded struct due to allOf(#/components/schemas/Pagination)
	Pagination `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Entities *[]TargetAndSegment `json:"entities,omitempty"`
}

// TargetsAndSegmentsInfo defines model for TargetsAndSegmentsInfo.
type TargetsAndSegmentsInfo struct {
	// Embedded fields due to inline allOf schema
	Entities *[]TargetAndSegment `json:"entities,omitempty"`
}

// Variation defines model for Variation.
type Variation struct {
	Description *string `json:"description,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        *string `json:"name,omitempty"`
	Value       string  `json:"value"`
}

// VariationMap defines model for VariationMap.
type VariationMap struct {
	TargetSegments *[]string    `json:"targetSegments,omitempty"`
	Targets        *[]TargetMap `json:"targets,omitempty"`
	Variation      string       `json:"variation"`
}

// WeightedVariation defines model for WeightedVariation.
type WeightedVariation struct {
	Variation string `json:"variation"`
	Weight    int    `json:"weight"`
}

// AccountQueryParam defines model for accountQueryParam.
type AccountQueryParam string

// ActionQueryParam defines model for actionQueryParam.
type ActionQueryParam []string

// ActorQueryParam defines model for actorQueryParam.
type ActorQueryParam string

// ArchivedQueryParam defines model for archivedQueryParam.
type ArchivedQueryParam bool

// AuditSortByField defines model for auditSortByField.
type AuditSortByField string

// List of AuditSortByField
const (
	AuditSortByField_action      AuditSortByField = "action"
	AuditSortByField_actor       AuditSortByField = "actor"
	AuditSortByField_executed_on AuditSortByField = "executed_on"
)

// AuditSortOrder defines model for auditSortOrder.
type AuditSortOrder string

// List of AuditSortOrder
const (
	AuditSortOrder_ASC  AuditSortOrder = "ASC"
	AuditSortOrder_DESC AuditSortOrder = "DESC"
)

// CommitMsgQueryParam defines model for commitMsgQueryParam.
type CommitMsgQueryParam string

// EndTimeQueryParam defines model for endTimeQueryParam.
type EndTimeQueryParam int

// EnvironmentOptionalQueryParam defines model for environmentOptionalQueryParam.
type EnvironmentOptionalQueryParam string

// EnvironmentQueryParam defines model for environmentQueryParam.
type EnvironmentQueryParam string

// FeatureIDs defines model for featureIDs.
type FeatureIDs []string

// FlagNameQueryParam defines model for flagNameQueryParam.
type FlagNameQueryParam string

// Identifier defines model for identifier.
type Identifier string

// IdentifierOptionalQueryParam defines model for identifierOptionalQueryParam.
type IdentifierOptionalQueryParam string

// IdentifierQueryParam defines model for identifierQueryParam.
type IdentifierQueryParam string

// Identifiers defines model for identifiers.
type Identifiers []string

// KindQueryParam defines model for kindQueryParam.
type KindQueryParam string

// List of KindQueryParam
const (
	KindQueryParam__int    KindQueryParam = "int"
	KindQueryParam__string KindQueryParam = "string"
	KindQueryParam_boolean KindQueryParam = "boolean"
	KindQueryParam_json    KindQueryParam = "json"
)

// MetricsOptionalParam defines model for metricsOptionalParam.
type MetricsOptionalParam bool

// NameQueryParam defines model for nameQueryParam.
type NameQueryParam string

// ObjectTypeQueryParam defines model for objectTypeQueryParam.
type ObjectTypeQueryParam string

// List of ObjectTypeQueryParam
const (
	ObjectTypeQueryParam_FeatureActivation ObjectTypeQueryParam = "FeatureActivation"
	ObjectTypeQueryParam_Segment           ObjectTypeQueryParam = "Segment"
)

// OrgQueryParam defines model for orgQueryParam.
type OrgQueryParam string

// PageNumber defines model for pageNumber.
type PageNumber int

// PageSize defines model for pageSize.
type PageSize int

// ProjectOptionalQueryParam defines model for projectOptionalQueryParam.
type ProjectOptionalQueryParam string

// ProjectQueryParam defines model for projectQueryParam.
type ProjectQueryParam string

// SafSortByField defines model for safSortByField.
type SafSortByField string

// List of SafSortByField
const (
	SafSortByField_name SafSortByField = "name"
)

// SafSortOrder defines model for safSortOrder.
type SafSortOrder string

// List of SafSortOrder
const (
	SafSortOrder_ASCENDING  SafSortOrder = "ASCENDING"
	SafSortOrder_DESCENDING SafSortOrder = "DESCENDING"
)

// SegmentNameQueryParam defines model for segmentNameQueryParam.
type SegmentNameQueryParam string

// SortByField defines model for sortByField.
type SortByField string

// List of SortByField
const (
	SortByField_archived   SortByField = "archived"
	SortByField_identifier SortByField = "identifier"
	SortByField_kind       SortByField = "kind"
	SortByField_modifiedAt SortByField = "modifiedAt"
	SortByField_name       SortByField = "name"
)

// SortOrder defines model for sortOrder.
type SortOrder string

// List of SortOrder
const (
	SortOrder_ASCENDING  SortOrder = "ASCENDING"
	SortOrder_DESCENDING SortOrder = "DESCENDING"
)

// StartTimeQueryParam defines model for startTimeQueryParam.
type StartTimeQueryParam int

// TargetGroupsOptionalParam defines model for targetGroupsOptionalParam.
type TargetGroupsOptionalParam string

// TargetIdentifierQueryParam defines model for targetIdentifierQueryParam.
type TargetIdentifierQueryParam string

// TargetNameQueryParam defines model for targetNameQueryParam.
type TargetNameQueryParam string

// TargetOptionalParam defines model for targetOptionalParam.
type TargetOptionalParam string

// TargetSortByField defines model for targetSortByField.
type TargetSortByField string

// List of TargetSortByField
const (
	TargetSortByField_createdAt  TargetSortByField = "createdAt"
	TargetSortByField_identifier TargetSortByField = "identifier"
	TargetSortByField_name       TargetSortByField = "name"
)

// TargetSortOrder defines model for targetSortOrder.
type TargetSortOrder string

// List of TargetSortOrder
const (
	TargetSortOrder_ASC  TargetSortOrder = "ASC"
	TargetSortOrder_DESC TargetSortOrder = "DESC"
)

// TargetsOptionalParam defines model for targetsOptionalParam.
type TargetsOptionalParam string

// TasSortByField defines model for tasSortByField.
type TasSortByField string

// List of TasSortByField
const (
	TasSortByField_name TasSortByField = "name"
)

// TasSortOrder defines model for tasSortOrder.
type TasSortOrder string

// List of TasSortOrder
const (
	TasSortOrder_ASCENDING  TasSortOrder = "ASCENDING"
	TasSortOrder_DESCENDING TasSortOrder = "DESCENDING"
)

// TsIdentifierQueryParam defines model for tsIdentifierQueryParam.
type TsIdentifierQueryParam string

// TsNameQueryParam defines model for tsNameQueryParam.
type TsNameQueryParam string

// TsSortByField defines model for tsSortByField.
type TsSortByField string

// List of TsSortByField
const (
	TsSortByField_identifier TsSortByField = "identifier"
	TsSortByField_name       TsSortByField = "name"
)

// TsSortOrder defines model for tsSortOrder.
type TsSortOrder string

// List of TsSortOrder
const (
	TsSortOrder_ASC  TsSortOrder = "ASC"
	TsSortOrder_DESC TsSortOrder = "DESC"
)

// APIKeyResponse defines model for APIKeyResponse.
type APIKeyResponse ApiKey

// APIKeysResponse defines model for APIKeysResponse.
type APIKeysResponse ApiKeys

// AuditTrailResponse defines model for AuditTrailResponse.
type AuditTrailResponse struct {
	CorrelationId *string                 `json:"correlationId,omitempty"`
	Data          *AuditTrails            `json:"data,omitempty"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        *Status                 `json:"status,omitempty"`
}

// AvailableFlagResponse defines model for AvailableFlagResponse.
type AvailableFlagResponse FlagBasicInfos

// BadRequest defines model for BadRequest.
type BadRequest Error

// Conflict defines model for Conflict.
type Conflict Error

// EnvironmentResponse defines model for EnvironmentResponse.
type EnvironmentResponse struct {
	CorrelationId *string                 `json:"correlationId,omitempty"`
	Data          *Environment            `json:"data,omitempty"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        *Status                 `json:"status,omitempty"`
}

// EnvironmentsResponse defines model for EnvironmentsResponse.
type EnvironmentsResponse struct {
	CorrelationId string                  `json:"correlationId"`
	Data          Environments            `json:"data"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        Status                  `json:"status"`
}

// FeatureEvaluationsResponse defines model for FeatureEvaluationsResponse.
type FeatureEvaluationsResponse FeatureEvaluations

// FeatureMetricsResponse defines model for FeatureMetricsResponse.
type FeatureMetricsResponse FeatureMetrics

// FeatureResponse defines model for FeatureResponse.
type FeatureResponse Feature

// Feature flags yaml for a project
type FeatureYamlResponse FeatureFlagsYaml

// FeaturesResponse defines model for FeaturesResponse.
type FeaturesResponse Features

// GitRepoResponse defines model for GitRepoResponse.
type GitRepoResponse GitRepoResp

// GitSyncError defines model for GitSyncError.
type GitSyncError Error

// InternalServerError defines model for InternalServerError.
type InternalServerError Error

// NotFound defines model for NotFound.
type NotFound Error

// ObjectSnapshotResponse defines model for ObjectSnapshotResponse.
type ObjectSnapshotResponse struct {
	CorrelationId *string                 `json:"correlationId,omitempty"`
	Data          *ObjectSnapshots        `json:"data,omitempty"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        *Status                 `json:"status,omitempty"`
}

// ProjectResponse defines model for ProjectResponse.
type ProjectResponse struct {
	CorrelationId *string                 `json:"correlationId,omitempty"`
	Data          *Project                `json:"data,omitempty"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        *Status                 `json:"status,omitempty"`
}

// ProjectsResponse defines model for ProjectsResponse.
type ProjectsResponse struct {
	CorrelationId *string                 `json:"correlationId,omitempty"`
	Data          *Projects               `json:"data,omitempty"`
	MetaData      *map[string]interface{} `json:"metaData,omitempty"`
	Status        *Status                 `json:"status,omitempty"`
}

// SegmentFlagsResponse defines model for SegmentFlagsResponse.
type SegmentFlagsResponse []SegmentFlag

// SegmentResponse defines model for SegmentResponse.
type SegmentResponse Segment

// SegmentsResponse defines model for SegmentsResponse.
type SegmentsResponse Segments

// TargetAttributes defines model for TargetAttributes.
type TargetAttributes []string

// TargetDetailResponse defines model for TargetDetailResponse.
type TargetDetailResponse TargetDetail

// TargetResponse defines model for TargetResponse.
type TargetResponse Target

// TargetSegmentResponse defines model for TargetSegmentResponse.
type TargetSegmentResponse TargetsAndSegments

// TargetSegmentsInfoResponse defines model for TargetSegmentsInfoResponse.
type TargetSegmentsInfoResponse TargetsAndSegmentsInfo

// TargetsResponse defines model for TargetsResponse.
type TargetsResponse Targets

// Unauthenticated defines model for Unauthenticated.
type Unauthenticated Error

// Unauthorized defines model for Unauthorized.
type Unauthorized Error

// APIKeyRequest defines model for APIKeyRequest.
type APIKeyRequest struct {
	Description *string `json:"description,omitempty"`
	ExpiredAt   *int    `json:"expiredAt,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Type        string  `json:"type"`
}

// APIKeyUpdateRequest defines model for APIKeyUpdateRequest.
type APIKeyUpdateRequest struct {
	Description *string `json:"description,omitempty"`
	ExpiredAt   *int    `json:"expiredAt,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// EnvironmentRequest defines model for EnvironmentRequest.
type EnvironmentRequest struct {
	Description *string `json:"description,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Project     string  `json:"project"`
	Tags        *[]Tag  `json:"tags,omitempty"`
}

// FeatureFlagRequest defines model for FeatureFlagRequest.
type FeatureFlagRequest struct {
	Archived            *bool           `json:"archived,omitempty"`
	DefaultOffVariation string          `json:"defaultOffVariation"`
	DefaultOnVariation  string          `json:"defaultOnVariation"`
	Description         *string         `json:"description,omitempty"`
	GitDetails          *GitDetails     `json:"gitDetails,omitempty"`
	Identifier          string          `json:"identifier"`
	Kind                string          `json:"kind"`
	Name                string          `json:"name"`
	Owner               *string         `json:"owner,omitempty"`
	Permanent           bool            `json:"permanent"`
	Prerequisites       *[]Prerequisite `json:"prerequisites,omitempty"`
	Project             string          `json:"project"`
	Tags                *[]Tag          `json:"tags,omitempty"`
	Variations          []Variation     `json:"variations"`
}

// FeaturePatchRequest defines model for FeaturePatchRequest.
type FeaturePatchRequest GitSyncPatchOperation

// Feature flags yaml for a project
type FeatureYamlRequest FeatureFlagsYaml

// GitRepoPatchRequest defines model for GitRepoPatchRequest.
type GitRepoPatchRequest PatchOperation

// GitRepoRequest defines model for GitRepoRequest.
type GitRepoRequest struct {
	AutoCommit     *bool   `json:"autoCommit,omitempty"`
	Branch         string  `json:"branch"`
	FilePath       string  `json:"filePath"`
	ObjectId       *string `json:"objectId,omitempty"`
	RepoIdentifier string  `json:"repoIdentifier"`
	RootFolder     string  `json:"rootFolder"`
}

// ProjectRequest defines model for ProjectRequest.
type ProjectRequest struct {
	Description *string `json:"description,omitempty"`
	Identifier  string  `json:"identifier"`
	Name        string  `json:"name"`
	Tags        *[]Tag  `json:"tags,omitempty"`
}

// SegmentPatchRequest defines model for SegmentPatchRequest.
type SegmentPatchRequest PatchOperation

// SegmentRequest defines model for SegmentRequest.
type SegmentRequest struct {
	Environment string    `json:"environment"`
	Excluded    *[]string `json:"excluded,omitempty"`
	Identifier  *string   `json:"identifier,omitempty"`
	Included    *[]string `json:"included,omitempty"`

	// Name of the target segment.
	Name    string `json:"name"`
	Project string `json:"project"`

	// An array of rules that can cause a user to be included in this segment.
	Rules *[]Clause `json:"rules,omitempty"`
	Tags  *[]Tag    `json:"tags,omitempty"`
}

// TargetPatchRequest defines model for TargetPatchRequest.
type TargetPatchRequest PatchOperation

// TargetRequest defines model for TargetRequest.
type TargetRequest Target

// GetAllAPIKeysParams defines parameters for GetAllAPIKeys.
type GetAllAPIKeysParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`
}

// AddAPIKeyParams defines parameters for AddAPIKey.
type AddAPIKeyParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Project
	Project ProjectQueryParam `json:"project"`
}

// DeleteApiKeyParams defines parameters for DeleteApiKey.
type DeleteApiKeyParams struct {

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetAPIKeyParams defines parameters for GetAPIKey.
type GetAPIKeyParams struct {

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// UpdateAPIKeyParams defines parameters for UpdateAPIKey.
type UpdateAPIKeyParams struct {

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetAuditByParamsParams defines parameters for GetAuditByParams.
type GetAuditByParamsParams struct {

	// Environment
	Environment *EnvironmentOptionalQueryParam `json:"environment,omitempty"`

	// Project
	Project *ProjectOptionalQueryParam `json:"project,omitempty"`

	// Object Type (FeatureActivation Or Segment)
	ObjectType ObjectTypeQueryParam `json:"objectType"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Start Time
	StartTime *StartTimeQueryParam `json:"startTime,omitempty"`

	// End Time
	EndTime *EndTimeQueryParam `json:"endTime,omitempty"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// Actor
	Actor *ActorQueryParam `json:"actor,omitempty"`

	// Action
	Action *ActionQueryParam `json:"action,omitempty"`

	// Identifier of the entity
	Identifier *IdentifierOptionalQueryParam `json:"identifier,omitempty"`

	// SortOrder
	SortOrder *AuditSortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *AuditSortByField `json:"sortByField,omitempty"`
}

// GetAllEnvironmentsParams defines parameters for GetAllEnvironments.
type GetAllEnvironmentsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *SortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *SortByField `json:"sortByField,omitempty"`
}

// CreateEnvironmentParams defines parameters for CreateEnvironment.
type CreateEnvironmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// DeleteEnvironmentParams defines parameters for DeleteEnvironment.
type DeleteEnvironmentParams struct {

	// Project
	Project ProjectQueryParam `json:"project"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetEnvironmentParams defines parameters for GetEnvironment.
type GetEnvironmentParams struct {

	// Project
	Project ProjectQueryParam `json:"project"`

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// ModifyEnvironmentParams defines parameters for ModifyEnvironment.
type ModifyEnvironmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`
}

// GetAllFeaturesParams defines parameters for GetAllFeatures.
type GetAllFeaturesParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment *EnvironmentOptionalQueryParam `json:"environment,omitempty"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *SortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *SortByField `json:"sortByField,omitempty"`

	// Name of the field
	Name *NameQueryParam `json:"name,omitempty"`

	// Identifier of the field
	Identifier *IdentifierQueryParam `json:"identifier,omitempty"`

	// Status of the feature flag
	Archived *ArchivedQueryParam `json:"archived,omitempty"`

	// Kind of the feature flag
	Kind *KindQueryParam `json:"kind,omitempty"`

	// Identifier of a target
	TargetIdentifier *TargetOptionalParam `json:"targetIdentifier,omitempty"`

	// Parameter to indicate if metrics data is requested in response
	Metrics *MetricsOptionalParam `json:"metrics,omitempty"`
}

// CreateFeatureFlagParams defines parameters for CreateFeatureFlag.
type CreateFeatureFlagParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetFeatureMetricsParams defines parameters for GetFeatureMetrics.
type GetFeatureMetricsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Unique feature identifiers
	FeatureIDs FeatureIDs `json:"featureIDs"`
}

// GetFlagsYamlParams defines parameters for GetFlagsYaml.
type GetFlagsYamlParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`
}

// UpdateFlagsYamlParams defines parameters for UpdateFlagsYaml.
type UpdateFlagsYamlParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`
}

// DeleteFeatureFlagParams defines parameters for DeleteFeatureFlag.
type DeleteFeatureFlagParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Git commit message
	CommitMsg *CommitMsgQueryParam `json:"commitMsg,omitempty"`
}

// GetFeatureFlagParams defines parameters for GetFeatureFlag.
type GetFeatureFlagParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment *EnvironmentOptionalQueryParam `json:"environment,omitempty"`
}

// PatchFeatureParams defines parameters for PatchFeature.
type PatchFeatureParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment *EnvironmentOptionalQueryParam `json:"environment,omitempty"`
}

// GetFeatureEvaluationsParams defines parameters for GetFeatureEvaluations.
type GetFeatureEvaluationsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment *EnvironmentOptionalQueryParam `json:"environment,omitempty"`

	// Start Time
	StartTime *StartTimeQueryParam `json:"startTime,omitempty"`

	// End Time
	EndTime *EndTimeQueryParam `json:"endTime,omitempty"`
}

// GetAllProjectsParams defines parameters for GetAllProjects.
type GetAllProjectsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *SortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *SortByField `json:"sortByField,omitempty"`
}

// CreateProjectParams defines parameters for CreateProject.
type CreateProjectParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// DeleteProjectParams defines parameters for DeleteProject.
type DeleteProjectParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetProjectParams defines parameters for GetProject.
type GetProjectParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// ModifyProjectParams defines parameters for ModifyProject.
type ModifyProjectParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// DeleteGitRepoParams defines parameters for DeleteGitRepo.
type DeleteGitRepoParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetGitRepoParams defines parameters for GetGitRepo.
type GetGitRepoParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// PatchGitRepoParams defines parameters for PatchGitRepo.
type PatchGitRepoParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// CreateGitRepoParams defines parameters for CreateGitRepo.
type CreateGitRepoParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetAllSegmentsParams defines parameters for GetAllSegments.
type GetAllSegmentsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *SortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *SortByField `json:"sortByField,omitempty"`

	// Name of the field
	Name *NameQueryParam `json:"name,omitempty"`

	// Identifier of the field
	Identifier *IdentifierQueryParam `json:"identifier,omitempty"`
}

// CreateSegmentParams defines parameters for CreateSegment.
type CreateSegmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// DeleteSegmentParams defines parameters for DeleteSegment.
type DeleteSegmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// GetSegmentParams defines parameters for GetSegment.
type GetSegmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// PatchSegmentParams defines parameters for PatchSegment.
type PatchSegmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// GetAvailableFlagsForSegmentParams defines parameters for GetAvailableFlagsForSegment.
type GetAvailableFlagsForSegmentParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *SafSortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *SafSortByField `json:"sortByField,omitempty"`

	// Identifier of the feature flag
	FlagNameIdentifier *FlagNameQueryParam `json:"flagNameIdentifier,omitempty"`
}

// GetSegmentFlagsParams defines parameters for GetSegmentFlags.
type GetSegmentFlagsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// GetAllTargetsParams defines parameters for GetAllTargets.
type GetAllTargetsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *TargetSortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *TargetSortByField `json:"sortByField,omitempty"`

	// Name of the target
	TargetName *TargetNameQueryParam `json:"targetName,omitempty"`

	// Identifier of the target
	TargetIdentifier *TargetIdentifierQueryParam `json:"targetIdentifier,omitempty"`
}

// CreateTargetParams defines parameters for CreateTarget.
type CreateTargetParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`
}

// GetTargetsAndSegmentsInfoParams defines parameters for GetTargetsAndSegmentsInfo.
type GetTargetsAndSegmentsInfoParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Comma separated identifiers for multiple targets
	Targets *TargetsOptionalParam `json:"targets,omitempty"`

	// Comma separated identifiers for multiple Target Groups
	TargetGroups *TargetGroupsOptionalParam `json:"targetGroups,omitempty"`
}

// GetTargetsAndSegmentsParams defines parameters for GetTargetsAndSegments.
type GetTargetsAndSegmentsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// Identifier of the target or segment
	TsIdentifier *TsIdentifierQueryParam `json:"tsIdentifier,omitempty"`

	// Name of the target or segment
	TsName *TsNameQueryParam `json:"tsName,omitempty"`

	// SortByField
	SortByField *TsSortByField `json:"sortByField,omitempty"`

	// SortOrder
	SortOrder *TsSortOrder `json:"sortOrder,omitempty"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`
}

// GetAllTargetAttributesParams defines parameters for GetAllTargetAttributes.
type GetAllTargetAttributesParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// UploadTargetsParams defines parameters for UploadTargets.
type UploadTargetsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// DeleteTargetParams defines parameters for DeleteTarget.
type DeleteTargetParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// GetTargetParams defines parameters for GetTarget.
type GetTargetParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// PatchTargetParams defines parameters for PatchTarget.
type PatchTargetParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// ModifyTargetParams defines parameters for ModifyTarget.
type ModifyTargetParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// GetTargetAvailableSegmentsParams defines parameters for GetTargetAvailableSegments.
type GetTargetAvailableSegmentsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`

	// PageNumber
	PageNumber *PageNumber `json:"pageNumber,omitempty"`

	// PageSize
	PageSize *PageSize `json:"pageSize,omitempty"`

	// SortOrder
	SortOrder *TasSortOrder `json:"sortOrder,omitempty"`

	// SortByField
	SortByField *TasSortByField `json:"sortByField,omitempty"`

	// Name of the segment
	SegmentName *SegmentNameQueryParam `json:"segmentName,omitempty"`
}

// GetTargetSegmentsParams defines parameters for GetTargetSegments.
type GetTargetSegmentsParams struct {

	// Account
	AccountIdentifier AccountQueryParam `json:"accountIdentifier"`

	// Organization Identifier
	Org OrgQueryParam `json:"org"`

	// Project
	Project ProjectQueryParam `json:"project"`

	// Environment
	Environment EnvironmentQueryParam `json:"environment"`
}

// AddAPIKeyJSONRequestBody defines body for AddAPIKey for application/json ContentType.
type AddAPIKeyJSONRequestBody APIKeyRequest

// UpdateAPIKeyJSONRequestBody defines body for UpdateAPIKey for application/json ContentType.
type UpdateAPIKeyJSONRequestBody APIKeyUpdateRequest

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody EnvironmentRequest

// ModifyEnvironmentJSONRequestBody defines body for ModifyEnvironment for application/json ContentType.
type ModifyEnvironmentJSONRequestBody EnvironmentRequest

// CreateFeatureFlagJSONRequestBody defines body for CreateFeatureFlag for application/json ContentType.
type CreateFeatureFlagJSONRequestBody FeatureFlagRequest

// UpdateFlagsYamlJSONRequestBody defines body for UpdateFlagsYaml for application/json ContentType.
type UpdateFlagsYamlJSONRequestBody FeatureYamlRequest

// PatchFeatureJSONRequestBody defines body for PatchFeature for application/json ContentType.
type PatchFeatureJSONRequestBody FeaturePatchRequest

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody ProjectRequest

// ModifyProjectJSONRequestBody defines body for ModifyProject for application/json ContentType.
type ModifyProjectJSONRequestBody ProjectRequest

// PatchGitRepoJSONRequestBody defines body for PatchGitRepo for application/json ContentType.
type PatchGitRepoJSONRequestBody GitRepoPatchRequest

// CreateGitRepoJSONRequestBody defines body for CreateGitRepo for application/json ContentType.
type CreateGitRepoJSONRequestBody GitRepoRequest

// CreateSegmentJSONRequestBody defines body for CreateSegment for application/json ContentType.
type CreateSegmentJSONRequestBody SegmentRequest

// PatchSegmentJSONRequestBody defines body for PatchSegment for application/json ContentType.
type PatchSegmentJSONRequestBody SegmentPatchRequest

// CreateTargetJSONRequestBody defines body for CreateTarget for application/json ContentType.
type CreateTargetJSONRequestBody TargetRequest

// PatchTargetJSONRequestBody defines body for PatchTarget for application/json ContentType.
type PatchTargetJSONRequestBody TargetPatchRequest

// ModifyTargetJSONRequestBody defines body for ModifyTarget for application/json ContentType.
type ModifyTargetJSONRequestBody TargetRequest

